C51 COMPILER V9.60.7.0   Q3                                                                03/14/2023 02:29:03 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE Q3
OBJECT MODULE PLACED IN .\Objects\q3.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE q3.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\q3.lst
                    -) TABS(2) OBJECT(.\Objects\q3.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"
   3          
   4          sbit StartStop = P1^0;
   5          code unsigned char display_msg1[]="   STOPWATCH     ";            //Display msg on 1st line of lcd
   6          code unsigned char display_msg2[]="     ";
   7          unsigned int sec = 0, min = 0;
   8          unsigned int total_count = 0, tlo_count = 0;
   9          
  10          void main(){
  11   1       TMOD = 0x05;  // set timer 0 in counter mode
  12   1       TH0 = 0x00;
  13   1       TL0 = 0x00;  
  14   1       P1 = 0x0f;    // set p1 port in input mode
  15   1        lcd_init();
  16   1        lcd_cmd(0x80);                          //Move cursor to first line
  17   1        lcd_write_string(display_msg1);
  18   1        lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
  19   1      //  lcd_write_string(display_msg2);
  20   1       while(1){
  21   2          while(StartStop == 1){     // start timer counting 
  22   3          TR0 = 1;
  23   3          total_count = (TH0*256 + TL0);    // TH0 and TL0 combined forms a number... let say th0 has 6
  24   3          sec = total_count/60;
  25   3          min = sec/60; 
  26   3          lcd_write_char((min/10) + 48);       // 48 is ASCII code for zero ...so to convert integer (let say 3) 
             -its ASCII code will be 48+3
  27   3          lcd_write_char((min%10) + 48);
  28   3          lcd_write_char(':');
  29   3          lcd_write_char((sec/10)%6 + 48);     // when seconds reaches 60 sec it should again display 01 ..02 and 
             -so on instead of 61..62
  30   3          lcd_write_char((sec%10) + 48);
  31   3          lcd_cmd(0xC0);   
  32   3         }
  33   2         while(StartStop == 0){                   // stop counter 
  34   3          TR0 = 0;
  35   3          total_count = (TH0*256 + TL0);
  36   3          sec = total_count/60;
  37   3          min = sec/60;
  38   3          lcd_write_char((min/10) + 48);       // 48 is ASCII code for zero ...so to convert integer (let say 3) 
             -its ASCII code will be 48+3
  39   3          lcd_write_char((min%10) + 48);
  40   3          lcd_write_char(':');
  41   3          lcd_write_char((sec/10) + 48);
  42   3          lcd_write_char((sec%10) + 48);
  43   3          lcd_cmd(0xC0);
  44   3         }
  45   2       }  
  46   1      
  47   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    359    ----
C51 COMPILER V9.60.7.0   Q3                                                                03/14/2023 02:29:03 PAGE 2   

   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
